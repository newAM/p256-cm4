on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "13 3 * * *"

name: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env: {"RUSTFLAGS": "-D warnings"}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: thumbv7em-none-eabi
      - run: cargo build -p p256-cm4 --target thumbv7em-none-eabi
      - run: cargo test -p testsuite --target thumbv7em-none-eabi --no-run

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          target: thumbv7em-none-eabi
      - run: cargo clippy --all-features --target thumbv7em-none-eabi -- --deny warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo +nightly fmt -- --check

  rustdoc:
    name: rustdoc
    runs-on: ubuntu-latest
    env: {"RUSTDOCFLAGS": "-D warnings --cfg docsrs"}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          target: thumbv7em-none-eabi
      - name: rustdoc
        run: |
          cd p256-cm4
          cargo +nightly rustdoc --target thumbv7em-none-eabi

  release:
    name: crates.io release
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
      - clippy
      - format
      - rustdoc
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: rust-lang/crates-io-auth-action@v1
        id: auth
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: thumbv7em-none-eabi
      - run: cargo publish -p p256-cm4
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
